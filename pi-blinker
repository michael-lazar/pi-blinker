#!/usr/bin/env python3
"""
This is a little script that blinks an LED whenever you get a star on github.
"""

import os
import sys
import time
import atexit
import logging

import requests

try:
    import RPi.GPIO as GPIO
except ImportError:
    print('Could not import GPIO. Are you running as the root user?')
    sys.exit(1)

_logger = logging.getLogger('pi-blink')
logging.basicConfig(level=logging.INFO)

CONFIG = {
    'api_url': 'https://api.github.com/users/michael-lazar/repos',
    'count_file': '/usr/local/var/pi-blinker/count',
    'pin': 7   
}

# Number of stargazers
count = None

@atexit.register
def save_count():
    if count is not None:
        _logger.info('Saving count to %s: %s', CONFIG['count_file'], count)
        os.makedirs(os.path.dirname(CONFIG['count_file']), exist_ok=True)
        with open(CONFIG['count_file'], 'w') as fp:
            fp.write(str(count))

# Load the count from a persistent file
try:
    with open(CONFIG['count_file'], 'r') as fp:
        count = int(fp.read())
        _logger.info('Read count from %s: %s', CONFIG['count_file'], count)
except IOError as e:
    _logger.error(e)
    count = 0

_logger.info('Initializing GPIO')
GPIO.setmode(GPIO.BOARD)
GPIO.setup(CONFIG['pin'], GPIO.OUT, initial=GPIO.LOW)

_logger.info('Starting main loop')
while True:
    try:
        resp = requests.get(CONFIG['api_url'])
        data = resp.json()
        new_count = sum(repo['stargazers_count'] for repo in data)
        
        _logger.info('Stargazers: %s', new_count)
        if new_count > count:
            # Blink!
            for _ in range(3):
                GPIO.output(CONFIG['pin'], GPIO.HIGH)
                time.sleep(1)
                GPIO.output(CONFIG['pin'], GPIO.LOW)
                time.sleep(1)
        count = new_count
        time.sleep(5)
    except KeyboardInterrupt:
        break
    except Exception as e:
        _logger.exception(e)

